on:
  # Every pull request
  pull_request:
  workflow_dispatch:
    # Allows manually triggering release
    inputs:
      release_version:
        description: "Version/branch to benchmark. See README.md for syntax. (defaults to unstable branch)"
        required: false
        default: ""
      # TODO: Once we've enabled running specific experiments
      # exp_strategy:
      #   description: "Limit the benchmark runs to just the given strategy -- leave blank to run all default strategies (run with `arrays-encoding` or see the *STRATEGIES file for supported strategies)"
      #   required: false
      #   default: ""
  schedule:
    # * is a special character in YAML so you have to quote this string
    # Automatically run the benchmarks on unstable every Saturday
    # See https://crontab.guru/#0_0_*_*_6
    - cron: "0 0 * * 6"

name: benchmarks

env:
  VERSION: ${{ github.event.inputs.release_version || '#unstable' }}
  # STRATEGY: ${{ github.event.inputs.exp_strategy }}
  # GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  run-benchmarks:
    if: github.ref != 'refs/heads/trunk'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Install benchexec
        run: |
          sudo add-apt-repository ppa:sosy-lab/benchmarking
          sudo apt install benchexec
          # Workaround for inability to set persistant user groups
          # across shells
          sudo chmod o+wt /sys/fs/cgroup/blkio/system.slice/benchexec-cgroup.service /sys/fs/cgroup/cpu,cpuacct/system.slice/benchexec-cgroup.service /sys/fs/cgroup/cpuset/system.slice/benchexec-cgroup.service /sys/fs/cgroup/freezer/system.slice/benchexec-cgroup.service /sys/fs/cgroup/memory/system.slice/benchexec-cgroup.service
      - name: Check benchexec configuration
        run: python3 -m benchexec.check_cgroups
      - name: Run benchmarks
        run: |
          # Ensure we have the needed dirs in PATH and PYTHONPATH
          source ./.envrc
          sbt 'set apalacheVersion := "${{ env.VERSION }}"; benchmarksReport'
      - name: Generate site and report
        run: sbt site/benchmarksIndexUpdate site/benchmarksLongitudinalUpdate
      - name: Commit report results and publish site
        # ONLY RUN IF ON TRUNK
        # if: github.ref == 'refs/heads/trunk'
        run: |
          git config --global user.name 'apalache-bench-ci'
          git config --global user.email 'apalache-bench-ci@users.noreply.github.com'
          git commit -am "Adding reports from run of ${{ env.VERSION }}"
          git push
          sbt makeSite ghpagesPushSite
